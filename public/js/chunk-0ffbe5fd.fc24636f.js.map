{"version":3,"sources":["webpack:///./src/views/publishDialog.tsx","webpack:///./src/hooks/useRefs.ts","webpack:///./src/views/publishConfig.tsx"],"names":["defineComponent","props","dialogFormVisible","type","Boolean","default","curId","String","Number","emits","closeDialog","fetchData","setup","emit","onRef","refs","useRefs","form","ElForm","state","reactive","loading","formData","describe","pubTargetIp","pubTargetProt","pubTargetDir","pubTargetUser","pubTargetPwd","rules","required","message","trigger","handler","submit","_refs$form","validate","fild","savePublishList","then","res","ElMessage","catch","onMounted","getPublishById","data","content","_createVNode","_resolveComponent","$event","_withDirectives","width","_resolveDirective","footer","_Fragment","_createTextVNode","config","shallowReactive","obj","key","undefined","refer","tableData","eidt","row","id","delete","deletePublis","methods","add","getPublishList","onClick","PublishDialog","onCloseDialog","onFetchData"],"mappings":"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","file":"js/chunk-0ffbe5fd.fc24636f.js","sourcesContent":["import { defineComponent, onMounted, reactive } from \"vue\";\r\nimport { ElForm, ElMessage } from \"element-plus\";\r\n\r\nimport useRefs from \"../hooks/useRefs\";\r\nimport { publish, savePublishList, getPublishById } from '../api'\r\n\r\nexport default defineComponent({\r\n\r\n  props: {\r\n    dialogFormVisible: { type: Boolean, default: false },\r\n    curId: { type: [ String, Number ] }\r\n  },\r\n\r\n  emits: {\r\n    closeDialog: () => true,\r\n    fetchData: () => true\r\n  },\r\n\r\n  setup(props, { emit }) {\r\n\r\n    const { onRef, refs } = useRefs({\r\n      form: ElForm\r\n    })\r\n\r\n    const state = reactive({\r\n      loading: false,\r\n\r\n      formData: {\r\n        describe: '',\r\n        pubTargetIp: '',\r\n        pubTargetProt: '22',\r\n        pubTargetDir: '',\r\n        pubTargetUser: 'root',\r\n        pubTargetPwd: 'wison@2015',\r\n      },\r\n      rules: {\r\n        describe: [{ required: true, message: 'Please enter the describe', trigger: 'change' }],\r\n        pubTargetIp: [{ required: true, message: 'Please enter the target ip', trigger: 'change' }],\r\n        pubTargetProt: [{ required: true, message: 'Please enter the target port', trigger: 'change' }],\r\n        pubTargetDir: [{ required: true, message: 'Please enter the target dir', trigger: 'change' }],\r\n        pubTargetUser: [{ required: true, message: 'Please enter the target user', trigger: 'change' }],\r\n        pubTargetPwd: [{ required: true, message: 'Please enter the target pwd', trigger: 'change' }],\r\n      }\r\n    })\r\n\r\n    const handler = {\r\n      closeDialog: () => {\r\n        emit('closeDialog')\r\n      },\r\n\r\n      submit: () => {\r\n        refs.form?.validate(fild => {\r\n          if (fild === true) {\r\n            state.loading = true\r\n            \r\n            savePublishList(state.formData)\r\n              .then(res => {\r\n                ElMessage({ message: 'success!!', type: 'success' })\r\n                state.loading = false\r\n\r\n                emit('fetchData')\r\n              })\r\n              .catch(() => (state.loading = false))\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      props.curId && (\r\n        state.loading = true,\r\n        getPublishById<Record<string, string>>(props.curId)\r\n          .then(res => {\r\n            state.loading = false\r\n\r\n            ;(state.formData as any) = res.data.content || {}\r\n            \r\n          })\r\n          .catch(() => (state.loading = false))\r\n      )\r\n    })\r\n\r\n    return () => (\r\n      <el-dialog v-model={props.dialogFormVisible} title={ `Publish Info` } width=\"750px\" top=\"5vh\"\r\n        before-close={handler.closeDialog}\r\n        v-slots={{\r\n          footer: () => <>\r\n            <div class=\"dialog-footer\">\r\n              <el-button onClick={handler.closeDialog}>Cancel</el-button>\r\n              <el-button type=\"primary\" onClick={handler.submit}>Save</el-button>\r\n            </div>\r\n          </>\r\n        }}\r\n      >\r\n        <el-form\r\n          v-loading={state.loading}\r\n          model={state.formData}\r\n          rules={state.rules}\r\n          label-width=\"auto\"\r\n          style={{ width: '600px' }}\r\n          ref={onRef.form}\r\n        >\r\n        <el-form-item label=\"Describe\" prop=\"describe\">\r\n          <el-input v-model={state.formData.describe} clearable />\r\n        </el-form-item>\r\n          <el-form-item label=\"Publish Target Ip\" prop=\"pubTargetIp\">\r\n            <el-input v-model={state.formData.pubTargetIp} clearable />\r\n          </el-form-item>\r\n          <el-form-item label=\"Publish Target Port\" prop=\"token\">\r\n            <el-input v-model={state.formData.pubTargetProt} clearable />\r\n          </el-form-item>\r\n          <el-form-item label=\"Publish Target Dir\" prop=\"pubTargetDir\">\r\n            <el-input v-model={state.formData.pubTargetDir} clearable />\r\n          </el-form-item>\r\n          <el-form-item label=\"Publish Target User\" prop=\"pubTargetUser\">\r\n            <el-input v-model={state.formData.pubTargetUser} clearable />\r\n          </el-form-item>\r\n          <el-form-item label=\"Publish Target Pwd\" prop=\"pubTargetPwd\">\r\n            <el-input v-model={state.formData.pubTargetPwd} clearable />\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n    )\r\n  }\r\n})","import { Ref, shallowReactive } from \"vue\";\r\n\r\ntype RefValueType<V> = V extends { use: { ref: () => Ref<infer Refer | null> } } ? Refer :\r\n  V extends new (...args: any[]) => infer Refer ? Refer : V\r\n\r\nexport default function useRefs<T extends { [k: string]: any }>(config: T): {\r\n  refs: {\r\n    [k in keyof T]: RefValueType<T[k]> | null | undefined\r\n  },\r\n  onRef: {\r\n    [k in keyof T]: (val: any) => void\r\n  }\r\n} {\r\n  const refs = shallowReactive((() => {\r\n    const obj = {} as any\r\n\r\n    for (let key in config) {\r\n      obj[key] = undefined\r\n    }\r\n\r\n    return obj\r\n  })())\r\n\r\n  const onRef = (() => {\r\n    const obj = {} as any\r\n    for (let key in config) {\r\n      obj[key] = (refer: any) => { refs[key] = refer }\r\n    }\r\n    return obj\r\n  })()\r\n\r\n  return {\r\n    refs,\r\n    onRef\r\n  } as any\r\n}","import { defineComponent, onMounted, reactive } from 'vue'\r\n\r\nimport { getPublishList, deletePublis } from '../api'\r\nimport PublishDialog from './publishDialog'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport type PublishItem = Record<string, string>\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n\r\n    const state = reactive({\r\n      loading: false,\r\n      dialogFormVisible: false,\r\n      curId: '',\r\n      tableData: []\r\n    })\r\n\r\n    const handler = {\r\n      eidt: (row: PublishItem) => {\r\n        state.curId = row.id\r\n\r\n        state.dialogFormVisible = true\r\n      },\r\n\r\n      delete: (id: string | number) => {\r\n        state.loading = true\r\n        deletePublis(id)\r\n          .then(res => {\r\n\r\n            ElMessage({ message: 'success!!', type: 'success' })\r\n            state.loading = false\r\n            methods.fetchData()\r\n            \r\n          }).catch(() => state.loading = false)\r\n      },\r\n\r\n      add: () => {\r\n        state.dialogFormVisible = true\r\n        state.curId = ''\r\n      }\r\n    }\r\n\r\n    const methods = {\r\n      fetchData() {\r\n        state.loading = true\r\n        getPublishList<[]>()\r\n          .then(res => {\r\n            state.tableData = res.data.content || []\r\n\r\n            state.loading = false\r\n          })\r\n          .catch(() => state.loading = false)\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      methods.fetchData()\r\n    })\r\n\r\n    return () => <div>\r\n      <el-button type=\"primary\" onClick={handler.add}>add</el-button>\r\n\r\n      <el-table data={state.tableData} v-loading={state.loading}>\r\n        <el-table-column prop=\"describe\" label=\"Describe\" width=\"400\" />\r\n        <el-table-column prop=\"pubTargetIp\" label=\"Ip\" width=\"150\" />\r\n        <el-table-column prop=\"pubTargetProt\" label=\"Prot\" width=\"80\" />\r\n        <el-table-column prop=\"pubTargetDir\" label=\"Static Dir\" />\r\n        <el-table-column prop=\"pubTargetUser\" label=\"Server User\" />\r\n        <el-table-column label=\"operation\" width=\"180\"\r\n          v-slots={{\r\n            default: ({ row }: { row: PublishItem }) => <>\r\n              <el-button type=\"primary\" onClick={() => handler.eidt(row)}>Eidt</el-button>\r\n              <el-button type=\"danger\" onClick={() => handler.delete(row.id)}>del</el-button>\r\n            </>\r\n          }}\r\n        />\r\n      </el-table>\r\n\r\n      {\r\n        state.dialogFormVisible && (\r\n          <PublishDialog\r\n            dialogFormVisible={state.dialogFormVisible}\r\n            curId={ state.curId }\r\n            onCloseDialog={() => state.dialogFormVisible = false}\r\n            onFetchData={() => {\r\n              methods.fetchData()\r\n\r\n              state.dialogFormVisible = false\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  }\r\n\r\n})"],"sourceRoot":""}