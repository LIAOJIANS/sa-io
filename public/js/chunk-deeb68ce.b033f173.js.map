{"version":3,"sources":["webpack:///./src/views/sysConfig.tsx","webpack:///./src/hooks/useRefs.ts"],"names":["defineComponent","setup","state","reactive","formData","simuCount","concurrentCount","rules","required","message","trigger","loading","onRef","refs","useRefs","form","ElForm","handle","submit","_refs$form","validate","fild","setSysConfig","then","res","ElMessage","type","catch","onMounted","getSysConfig","data","content","_createVNode","_withDirectives","_resolveComponent","width","default","$event","_resolveDirective","textAlign","_createTextVNode","config","shallowReactive","obj","key","undefined","refer"],"mappings":"uLAMeA,0CAAgB,CAC7BC,QAEE,MAAMC,EAAQC,sBAAS,CACrBC,SAAU,CACRC,UAAW,GACXC,gBAAiB,IAGnBC,MAAO,CACLD,gBAAiB,CAAC,CAAEE,UAAU,EAAMC,QAAS,2DAA4DC,QAAS,WAClHL,UAAW,CAAC,CAAEG,UAAU,EAAMC,QAAS,qEAAsEC,QAAS,YAGxHC,SAAS,KAGL,MAAEC,EAAK,KAAEC,GAASC,eAAQ,CAC9BC,KAAMC,SAGFC,EAAS,CACbC,OAAQA,KAAK,IAAAC,EACF,QAATA,EAAAN,EAAKE,YAAI,IAAAI,GAATA,EAAWC,SAASC,KACL,IAATA,IACFnB,EAAMS,SAAU,EAChBW,eAAapB,EAAME,UAChBmB,KAAKC,IACJC,eAAU,CAAEhB,QAAS,YAAaiB,KAAM,YACxCxB,EAAMS,SAAU,IAEjBgB,MAAM,IAAOzB,EAAMS,SAAU,QAcxC,OARAiB,uBAAU,KAERC,iBACGN,KAAKC,IACJtB,EAAME,SAAWoB,EAAIM,KAAKC,YAIzB,IAAAC,yBAAC,MAAD,MAAAC,4BAAAD,yBAAAE,8BAAC,WAAD,OAGIhC,EAAME,SAAQ,MACdF,EAAMK,MAAK,2BAEX,CAAE4B,MAAO,SAAS,IACpBvB,EAAMG,MAAI,CAAAqB,YAAA,CAAAJ,yBAAAE,8BAAA,oFAAAE,YAAA,CAAAJ,yBAAAE,8BAAA,wBAGMhC,EAAME,SAASC,UAAS,sBAAAgC,GAAxBnC,EAAME,SAASC,UAASgC,EAAA,uBAAAL,yBAAAE,8BAAA,oGAAAE,YAAA,CAAAJ,yBAAAE,8BAAA,wBAGxBhC,EAAME,SAASE,gBAAe,sBAAA+B,GAA9BnC,EAAME,SAASE,gBAAe+B,EAAA,4BAAAC,8BAAA,WAXxCpC,EAAMS,WAAOqB,yBAAA,aAed,CAAEO,UAAW,SAAUJ,MAAO,UAAS,CAAAH,yBAAAE,8BAAA,oDAEJjB,EAAOC,QAAM,CAAAkB,YAAA,CAAAI,6BAAA,iB,oCCtElE,kDAKc,SAAU1B,EAAwC2B,GAQ9D,MAAM5B,EAAO6B,6BAAgB,MAC3B,MAAMC,EAAM,GAEZ,IAAK,IAAIC,KAAOH,EACdE,EAAIC,QAAOC,EAGb,OAAOF,GAPoB,IAUvB/B,EAAQ,MACZ,MAAM+B,EAAM,GACZ,IAAK,IAAIC,KAAOH,EACdE,EAAIC,GAAQE,IAAiBjC,EAAK+B,GAAOE,GAE3C,OAAOH,GALK,GAQd,MAAO,CACL9B,OACAD","file":"js/chunk-deeb68ce.b033f173.js","sourcesContent":["import { defineComponent, onMounted, reactive } from \"vue\";\r\nimport { ElMessage, ElForm } from \"element-plus\";\r\n\r\nimport { getSysConfig, setSysConfig } from '../api'\r\nimport useRefs from \"../hooks/useRefs\";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n\r\n    const state = reactive({\r\n      formData: {\r\n        simuCount: '',\r\n        concurrentCount: ''\r\n      },\r\n\r\n      rules: {\r\n        concurrentCount: [{ required: true, message: 'Please enter the maximum simultaneous construction count', trigger: 'change' }],\r\n        simuCount: [{ required: true, message: 'Please enter the concurrent count of packages for the same project', trigger: 'change', }]\r\n      },\r\n\r\n      loading: false\r\n    })\r\n\r\n    const { onRef, refs } = useRefs({\r\n      form: ElForm\r\n    })\r\n\r\n    const handle = {\r\n      submit: () => {\r\n        refs.form?.validate(fild => {\r\n          if (fild === true) {\r\n            state.loading = true\r\n            setSysConfig(state.formData)\r\n              .then(res => {\r\n                ElMessage({ message: 'success!!', type: 'success' })\r\n                state.loading = false\r\n              })\r\n              .catch(() => (state.loading = false))\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n\r\n      getSysConfig<{ concurrentCount: string, simuCount: string }>()\r\n        .then(res => {\r\n          state.formData = res.data.content\r\n        })\r\n    })\r\n\r\n    return () => <div>\r\n      <el-form\r\n        v-loading={state.loading}\r\n        model={state.formData}\r\n        rules={state.rules}\r\n        label-width=\"auto\"\r\n        style={{ width: '600px' }}\r\n        ref={onRef.form}\r\n      >\r\n        <el-form-item label=\"Maximum simultaneous construction count\" prop=\"simuCount\">\r\n          <el-input v-model={state.formData.simuCount} clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"Concurrent count of packages for the same project\" prop=\"concurrentCount\">\r\n          <el-input v-model={state.formData.concurrentCount}  clearable />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div style={{ textAlign: 'center', width: '600px' }}>\r\n\r\n        <el-button el-button type=\"primary\" onClick={handle.submit}>保存</el-button>\r\n      </div>\r\n    </div>\r\n  }\r\n})","import { Ref, shallowReactive } from \"vue\";\r\n\r\ntype RefValueType<V> = V extends { use: { ref: () => Ref<infer Refer | null> } } ? Refer :\r\n  V extends new (...args: any[]) => infer Refer ? Refer : V\r\n\r\nexport default function useRefs<T extends { [k: string]: any }>(config: T): {\r\n  refs: {\r\n    [k in keyof T]: RefValueType<T[k]> | null | undefined\r\n  },\r\n  onRef: {\r\n    [k in keyof T]: (val: any) => void\r\n  }\r\n} {\r\n  const refs = shallowReactive((() => {\r\n    const obj = {} as any\r\n\r\n    for (let key in config) {\r\n      obj[key] = undefined\r\n    }\r\n\r\n    return obj\r\n  })())\r\n\r\n  const onRef = (() => {\r\n    const obj = {} as any\r\n    for (let key in config) {\r\n      obj[key] = (refer: any) => { refs[key] = refer }\r\n    }\r\n    return obj\r\n  })()\r\n\r\n  return {\r\n    refs,\r\n    onRef\r\n  } as any\r\n}"],"sourceRoot":""}