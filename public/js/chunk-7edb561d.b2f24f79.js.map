{"version":3,"sources":["webpack:///./src/views/build.tsx","webpack:///./src/views/logDialog.tsx"],"names":["defineComponent","props","projectName","type","String","branch","buildDailogVisible","Boolean","default","emits","closeDialog","setup","emit","state","reactive","formData","install","shell","shellContent","publish","pubTargetIp","pubTargetProt","pubTargetDir","pubTargetUser","pubTargetPwd","rules","required","message","trigger","logProjectName","dialogFormVisible","handler","closeLogDialog","build","then","res","ElMessage","data","content","getShellContent","apiGetShellContent","_createVNode","_Fragment","_resolveComponent","$event","width","color","_createTextVNode","footer","LogDialog","logContent","ref","eventSourceRef","onMounted","eventSource","value","EventSource","onmessage","event","replace","onerror","_eventSourceRef$value","close"],"mappings":"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","file":"js/chunk-7edb561d.b2f24f79.js","sourcesContent":["import { defineComponent, reactive } from 'vue'\r\n\r\nimport { getShellContent as apiGetShellContent, build } from '../api'\r\nimport { ElMessage } from 'element-plus'\r\nimport LogDialog from './logDialog'\r\n\r\nexport default defineComponent({\r\n\r\n  props: {\r\n    projectName: { type: String },\r\n    branch: { type: String },\r\n    buildDailogVisible: { type: Boolean, default: false }\r\n  },\r\n\r\n  emits: {\r\n    closeDialog: () => true\r\n  },\r\n\r\n  setup(props, { emit }) {\r\n\r\n    const state = reactive({\r\n      formData: {\r\n        install: true,\r\n\r\n        branch: props.branch,\r\n\r\n        shell: false,\r\n        shellContent: '',\r\n\r\n        publish: false,\r\n        pubTargetIp: '',\r\n        pubTargetProt: '',\r\n        pubTargetDir: '',\r\n        pubTargetUser: '',\r\n        pubTargetPwd: ''\r\n      },\r\n\r\n      rules: {\r\n        branch: [{ required: true, message: 'Please enter the branch', trigger: 'change' }],\r\n        shellContent: [{ required: true, message: 'Please enter the shell content', trigger: 'change' }],\r\n        pubTargetIp: [{ required: true, message: 'Please enter the target ip', trigger: 'change' }],\r\n        pubTargetProt: [{ required: true, message: 'Please enter the target port', trigger: 'change' }],\r\n        pubTargetDir: [{ required: true, message: 'Please enter the target dir', trigger: 'change' }],\r\n        pubTargetUser: [{ required: true, message: 'Please enter the target user', trigger: 'change' }],\r\n        pubTargetPwd: [{ required: true, message: 'Please enter the target pwd', trigger: 'change' }],\r\n      },\r\n      \r\n      logProjectName: '',\r\n      dialogFormVisible: false\r\n    })\r\n\r\n    const handler = {\r\n      closeDialog: () => {\r\n        emit('closeDialog')\r\n      },\r\n\r\n      closeLogDialog: () => {\r\n        state.dialogFormVisible = false\r\n      },\r\n\r\n      build: () => {\r\n        build<string>({\r\n          ...state.formData,\r\n          projectName: props.projectName!\r\n        })\r\n          .then(res => {\r\n            ElMessage({\r\n              type: 'success',\r\n              message: res.data.message\r\n            })\r\n\r\n            state.logProjectName = res.data.content\r\n            state.dialogFormVisible = true\r\n          })\r\n      },\r\n\r\n      getShellContent: () => {\r\n        if (state.formData.shell) {\r\n          apiGetShellContent<string>(props.projectName!)\r\n            .then(res => {\r\n              state.formData.shellContent = res.data.content\r\n            })\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => (\r\n      <>\r\n        <el-dialog v-model={props.buildDailogVisible} top=\"5vh\" width={800} title={`build ${props.projectName}`} v-slots={{\r\n          footer: () => <>\r\n            <div class=\"dialog-footer\">\r\n              <el-button onClick={handler.closeDialog}>Cancel</el-button>\r\n              <el-button type=\"primary\" onClick={handler.build}>\r\n                Build\r\n              </el-button>\r\n            </div>\r\n          </>\r\n        }}\r\n\r\n          before-close={handler.closeDialog}\r\n        >\r\n          <el-form model={state.formData} label-width={140} rules={state.rules} style={{ width: '700px' }}>\r\n\r\n            <el-form-item label=\"is Install：\">\r\n              <el-checkbox v-model={state.formData.install}></el-checkbox>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"Branch\">\r\n              <el-input v-model={state.formData.branch}></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"is Shell：\">\r\n              <el-checkbox v-model={state.formData.shell} onChange={handler.getShellContent}></el-checkbox>\r\n            </el-form-item>\r\n\r\n            {\r\n              state.formData.shell && (\r\n                <el-form-item label=\"shell content：\" prop=\"shellContent\">\r\n                  <span style={{ color: 'red' }}>ps: custom shell scripts will completely overwrite built-in commands</span>\r\n                  <el-input type=\"textarea\" v-model={state.formData.shellContent} rows={20}></el-input>\r\n                </el-form-item>\r\n              )\r\n            }\r\n\r\n            <el-form-item label=\"is Publish：\">\r\n              <el-checkbox v-model={state.formData.publish}></el-checkbox>\r\n            </el-form-item>\r\n            {\r\n              state.formData.publish && (\r\n              <>\r\n                <el-form-item label=\"publish IP：\" prop=\"pubTargetIp\">\r\n                  <el-input v-model={state.formData.pubTargetIp}></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"publish Port：\" prop=\"pubTargetProt\">\r\n                  <el-input v-model={state.formData.pubTargetProt}></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"publish Dir：\" prop=\"pubTargetDir\">\r\n                  <el-input v-model={state.formData.pubTargetDir}></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"publish User：\" prop=\"pubTargetUser\">\r\n                  <el-input v-model={state.formData.pubTargetUser}></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"publish Pwd：\" prop=\"pubTargetPwd\">\r\n                  <el-input v-model={state.formData.pubTargetPwd}></el-input>\r\n                </el-form-item>\r\n              </>\r\n              )\r\n            }\r\n          </el-form>\r\n        </el-dialog>\r\n\r\n        {\r\n          state.dialogFormVisible && (\r\n            <LogDialog \r\n              dialogFormVisible={ state.dialogFormVisible }\r\n              projectName={ state.logProjectName }\r\n              onCloseDialog={ handler.closeLogDialog }\r\n            />\r\n          )\r\n        }\r\n      </>\r\n    )\r\n  }\r\n})","import { defineComponent, onMounted, ref } from \"vue\";\r\n\r\nexport default defineComponent({\r\n\r\n  props: {\r\n    dialogFormVisible: { type: Boolean, default: false },\r\n    projectName: { type: String }\r\n  },\r\n\r\n  emits: {\r\n    closeDialog: () => true\r\n  },\r\n\r\n  setup(props, { emit }) {\r\n\r\n    const logContent = ref<string>('')\r\n    const eventSourceRef = ref<EventSource | null>(null)\r\n\r\n    onMounted(() => {\r\n      const eventSource =\r\n        eventSourceRef.value =\r\n        new EventSource(`/api/get_log?projectName=${props.projectName}`)\r\n\r\n      eventSource.onmessage = (event) => {\r\n        logContent.value = `${event.data}`.replace(/<br>/g, '\\n')\r\n      }\r\n\r\n      eventSource.onerror = () => {\r\n        logContent.value = 'error'\r\n      }\r\n    })\r\n\r\n    const handler = {\r\n      closeDialog: () => {\r\n        eventSourceRef.value?.close()\r\n\r\n        emit('closeDialog')\r\n      }\r\n    }\r\n\r\n    return () => (\r\n      <el-dialog v-model={props.dialogFormVisible} title=\"Build Logs\" width=\"80%\" top=\"5vh\"\r\n        before-close={handler.closeDialog}\r\n        v-slots={{\r\n          footer: () => <>\r\n            <div class=\"dialog-footer\">\r\n              <el-button onClick={handler.closeDialog}>Cancel</el-button>\r\n            </div>\r\n          </>\r\n        }}\r\n      >\r\n        <el-input type=\"textarea\" v-model={logContent.value} rows={30} readonly></el-input>\r\n      </el-dialog>\r\n    )\r\n  }\r\n})"],"sourceRoot":""}