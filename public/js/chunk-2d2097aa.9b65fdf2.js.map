{"version":3,"sources":["webpack:///./src/views/logDialog.tsx"],"names":["defineComponent","props","dialogFormVisible","type","Boolean","default","projectName","String","emits","closeDialog","setup","emit","logContent","ref","eventSourceRef","onMounted","eventSource","value","EventSource","onmessage","event","data","replace","onerror","handler","_eventSourceRef$value","close","_createVNode","_resolveComponent","$event","footer","_Fragment","_createTextVNode"],"mappings":"uIAEeA,0CAAgB,CAE7BC,MAAO,CACLC,kBAAmB,CAAEC,KAAMC,QAASC,SAAS,GAC7CC,YAAa,CAAEH,KAAMI,SAGvBC,MAAO,CACLC,YAAaA,KAAM,GAGrBC,MAAMT,GAAO,KAAEU,IAEb,MAAMC,EAAaC,iBAAY,IACzBC,EAAiBD,iBAAwB,MAE/CE,uBAAU,KACR,MAAMC,EACJF,EAAeG,MACf,IAAIC,YAAY,wBAA+EjB,EAAMK,aAEvGU,EAAYG,UAAaC,IACvBR,EAAWK,OAAQ,GAAGG,EAAMC,MAAOC,QAAQ,QAAS,OAGtDN,EAAYO,QAAU,KACpBX,EAAWK,MAAQ,WAIvB,MAAMO,EAAU,CACdf,YAAaA,KAAK,IAAAgB,EACI,QAApBA,EAAAX,EAAeG,aAAK,IAAAQ,GAApBA,EAAsBC,QAEtBf,EAAK,iBAIT,MAAO,IAAAgB,yBAAAC,8BAAC,aAAD,YACe3B,EAAMC,kBAAiB,sBAAA2B,GAAvB5B,EAAMC,kBAAiB2B,EAAA,wDAC3BL,EAAQf,aAAW,CAAAJ,YAAA,CAAAsB,yBAAAC,8BAAA,wCASEhB,EAAWK,MAAK,sBAAAY,GAAhBjB,EAAWK,MAAKY,EAAA,KAAQ,GAAE,oBAP3DC,OAAQA,IAAAH,yBAAAI,cAAA,MAAAJ,yBAAC,MAAD,yBAAAA,yBAAAC,8BAAC,aAAD,SAEgBJ,EAAQf,aAAW,CAAAJ,YAAA,CAAA2B,6BAAA","file":"js/chunk-2d2097aa.9b65fdf2.js","sourcesContent":["import { defineComponent, onMounted, ref } from \"vue\";\r\n\r\nexport default defineComponent({\r\n\r\n  props: {\r\n    dialogFormVisible: { type: Boolean, default: false },\r\n    projectName: { type: String }\r\n  },\r\n\r\n  emits: {\r\n    closeDialog: () => true\r\n  },\r\n\r\n  setup(props, { emit }) {\r\n\r\n    const logContent = ref<string>('')\r\n    const eventSourceRef = ref<EventSource | null>(null)\r\n\r\n    onMounted(() => {\r\n      const eventSource =\r\n        eventSourceRef.value =\r\n        new EventSource(`${process.env.NODE_ENV === 'development' ? '/api' : ''}/get_log?projectName=${props.projectName}`)\r\n\r\n      eventSource.onmessage = (event) => {\r\n        logContent.value = `${event.data}`.replace(/<br>/g, '\\n')\r\n      }\r\n\r\n      eventSource.onerror = () => {\r\n        logContent.value = 'error'\r\n      }\r\n    })\r\n\r\n    const handler = {\r\n      closeDialog: () => {\r\n        eventSourceRef.value?.close()\r\n\r\n        emit('closeDialog')\r\n      }\r\n    }\r\n\r\n    return () => (\r\n      <el-dialog v-model={props.dialogFormVisible} title=\"Build Logs\" width=\"80%\" top=\"5vh\"\r\n        before-close={handler.closeDialog}\r\n        v-slots={{\r\n          footer: () => <>\r\n            <div class=\"dialog-footer\">\r\n              <el-button onClick={handler.closeDialog}>Cancel</el-button>\r\n            </div>\r\n          </>\r\n        }}\r\n      >\r\n        <el-input type=\"textarea\" v-model={logContent.value} rows={30} readonly></el-input>\r\n      </el-dialog>\r\n    )\r\n  }\r\n})"],"sourceRoot":""}